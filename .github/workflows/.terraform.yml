name: Workflow for terraform

on:
  workflow_call:
    secrets:
      TERRAFORM_ACCESS_KEY_ID:
        required: true
      TERRAFORM_SECRET_ACCESS_KEY:
        required: true
      TERRAFORM_REGION:
        required: true
      SLACK_DEPLOYMENT_WEBHOOK:
        required: true
    inputs:
      module_name:
        required: true
        type: string
      config_name:
        required: true
        type: string
      git_branch:
        required: true
        type: string
      apply:
        required: false
        type: boolean
        default: false

jobs:
  terraform:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: ${{ inputs.git_branch }}
          fetch-depth: 0

      - name: Git Pull
        run : git pull origin ${{ inputs.git_branch }}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.TERRAFORM_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.TERRAFORM_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.TERRAFORM_REGION }}

      - name: Identify files changes
        id: changed-files
        uses: tj-actions/changed-files@v34
        with:
          files: |
            **/config/**
            **/**/config/**

      - name: List all changed files
        run: |
          for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
            echo "$file was changed" 
          done

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
      
      - name: Terraform Init
        run: cd ${{ inputs.module_name }} && make CONFIG_NAME=${{ inputs.config_name }} terraform.init

      - name: Terraform Plan
        run: cd ${{ inputs.module_name }} && make CONFIG_NAME=${{ inputs.config_name }} terraform.plan

      - name: Terrraform Apply
        if: ${{ inputs.apply }}
        run: cd ${{ inputs.module_name }} && make CONFIG_NAME=${{ inputs.config_name }} terraform.apply