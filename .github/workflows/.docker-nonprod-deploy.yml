name: Workflow for Docker bake

on:
  workflow_call:
    secrets:
      GH_ACTIONS_ACCESS_KEY_ID:
        required: true
      GH_ACTIONS_SECRET_ACCESS_KEY:
        required: true
      GH_ACTIONS_REGION:
        required: true
      FOUNDATION_ACCESS_TOKEN:
        required: true
    inputs:
      deploy_env:
        required: false
        type: string
        default: "staging"
      builder_cache:
        required: false
        type: boolean
        default: false
      ecr_name:
        required: true
        type: string
jobs:
  docker-bake: 
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.GH_ACTIONS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.GH_ACTIONS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.GH_ACTIONS_REGION }}
        
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build image
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          if [[ ${{ inputs.builder_cache }} == false ]]; then

            docker buildx build \
            --build-arg COMMIT_SHA=$GITHUB_SHA_SHORT \
            --build-arg COMMIT_TAG=$GITHUB_REF_NAME \
            --build-arg GH_TOKEN=${{ secrets.FOUNDATION_ACCESS_TOKEN }} \
            --build-arg APP_ENV=${{ inputs.deploy_env }} \
            --push -t $ECR_REGISTRY/${{ inputs.ecr_name }}:$GITHUB_SHA_SHORT .
            echo "::set-output name=image::$ECR_REGISTRY/${{ inputs.ecr_name }}:$GITHUB_SHA_SHORT" 

          else 
            docker pull $ECR_REGISTRY/${{ inputs.ecr_name }}:builder || true

            docker buildx build \
            --target builder \
            --cache-from $ECR_REGISTRY/${{ inputs.ecr_name }}:builder \
            --build-arg COMMIT_SHA=$GITHUB_SHA_SHORT \
            --build-arg COMMIT_TAG=$GITHUB_REF_NAME \
            --build-arg GH_TOKEN=${{ secrets.FOUNDATION_ACCESS_TOKEN }} \
            --build-arg APP_ENV=${{ inputs.deploy_env }} \
            --push -t $ECR_REGISTRY/${{ inputs.ecr_name }}:builder .

            docker buildx build \
            --cache-from $ECR_REGISTRY/${{ inputs.ecr_name }}:builder \
            --build-arg COMMIT_SHA=$GITHUB_SHA_SHORT \
            --build-arg COMMIT_TAG=$GITHUB_REF_NAME \
            --build-arg GH_TOKEN=${{ secrets.FOUNDATION_ACCESS_TOKEN }} \
            --build-arg APP_ENV=${{ inputs.deploy_env }} \
            --push -t $ECR_REGISTRY/${{ inputs.ecr_name }}:$GITHUB_SHA_SHORT .
            echo "::set-output name=image::$ECR_REGISTRY/${{ inputs.ecr_name }}:$GITHUB_SHA_SHORT" 
          fi
