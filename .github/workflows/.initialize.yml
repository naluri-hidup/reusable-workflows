name: Workflow for nonprod deployment - initialization

on:
  workflow_call:
    secrets:
      SLACK_DEPLOYMENT_WEBHOOK:
        required: true
    inputs:
      deploy_env:
        required: false
        type: string
        default: 'staging'
    outputs:
      git_branch:
        value: ${{ jobs.initialize.outputs.git_branch }}
      git_sha_short: 
        value: ${{ jobs.initialize.outputs.git_sha_short }}
      deploy_env:
        value: ${{ jobs.initialize.outputs.deploy_env }}
jobs:
  initialize:
    runs-on: ubuntu-latest
    outputs:
      git_branch: ${{ steps.set_git_branch.outputs.value }}
      git_sha_short: ${{ steps.set_git_sha_short.outputs.value }}
      deploy_env: ${{ steps.set_deploy_env.outputs.value }}
    steps:
      - name: Set git branch
        id: set_git_branch
        shell: bash
        run: echo "::set-output name=value::$(echo ${GITHUB_REF#refs/heads/})"

      - name: Set git sha short
        id: set_git_sha_short
        shell: bash
        run: echo "::set-output name=value::$(echo ${GITHUB_SHA::7})"

      - name: Set deploy env
        id: set_deploy_env
        run: |
          DEPLOY_ENV=${{ github.event.inputs.deploy_env }}
          echo "::set-output name=value::${DEPLOY_ENV:-"staging"}"

      - name: Slack Notification
        run: |
          curl -X POST -H 'Content-type: application/json' \
          --data '{"text":":rocket: [ *${{ github.repository }}* ] ${{ steps.set_git_branch.outputs.value }} source code branch to ${{ steps.set_deploy_env.outputs.value }} environment by *@${{ github.actor }}*: `started`"}' \
          ${{ secrets.SLACK_DEPLOYMENT_WEBHOOK }}

