name: Workflow for Docker bake

on:
  workflow_call:
    secrets:
      GH_ACTIONS_ACCESS_KEY_ID:
        required: true
      GH_ACTIONS_SECRET_ACCESS_KEY:
        required: true
      GH_ACTIONS_REGION:
        required: true
      FOUNDATION_ACCESS_TOKEN:
        required: true
    inputs: 
      builder_cache:
        required: false
        type: boolean
        default: false
      git_branch:
        required: true
        type: string
      deploy_env:
        required: true
        type: string
      ecr_name:
        required: true
        type: string
      git_sha_short:
        required: true
        type: string

jobs:
  docker_build: 
    runs-on: ubuntu-latest
    outputs:
      ecr_image: ${{ steps.build_image.outputs.ecr_image }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: ${{ inputs.git_branch }}
          fetch-depth: 0

      - name: Git Pull 
        run: git pull origin ${{ inputs.git_branch }}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.GH_ACTIONS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.GH_ACTIONS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.GH_ACTIONS_REGION }}
        
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build image
        id: build_image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          DOCKER_BUILDKIT: 1
        run: |
          if [[ ${{ inputs.builder_cache }} == false ]]; then

            docker buildx build \
            --no-cache \
            --build-arg COMMIT_SHA=${{ inputs.git_sha_short }} \
            --build-arg COMMIT_TAG=$GITHUB_REF_NAME \
            --build-arg GH_TOKEN=${{ secrets.FOUNDATION_ACCESS_TOKEN }} \
            --build-arg APP_ENV=${{ inputs.deploy_env }} \
            --push -t $ECR_REGISTRY/${{ inputs.ecr_name }}:${{ inputs.git_sha_short }} .

          else 

            docker buildx build \
            --cache-from $ECR_REGISTRY/${{ inputs.ecr_name }} \
            --build-arg BUILDKIT_INLINE_CACHE=1 \
            --build-arg COMMIT_SHA=${{ inputs.git_sha_short }} \
            --build-arg COMMIT_TAG=$GITHUB_REF_NAME \
            --build-arg GH_TOKEN=${{ secrets.FOUNDATION_ACCESS_TOKEN }} \
            --build-arg APP_ENV=${{ inputs.deploy_env }} \
            --push -t $ECR_REGISTRY/${{ inputs.ecr_name }}:${{ inputs.git_sha_short }} .

          fi
          