name: Production Deployment

on:
  push:
    tags:
      - "*"
  workflow_dispatch:
    inputs:
      deploy_env:
        description: 'Specify the environment to deploy to'
        required: false
        default: prod
      ## This for db migration pipeline, if not require can remove from here until     
      standalone_task:
        type: boolean
        required: true
        default: false
        description: "Turn on if for migration"
      ## here  

jobs:
  initialize:
    uses: naluri-hidup/reusable-workflows/.github/workflows/.initialize.yml@v2.0
    secrets: inherit
    with:
      default_deploy_env: 'prod'

  docker_build:
    needs: initialize
    uses: naluri-hidup/reusable-workflows/.github/workflows/.docker-promote.yml@v2.0
    secrets: inherit
    with:
      git_branch: ${{ needs.initialize.outputs.git_branch }}
      deploy_env: ${{ needs.initialize.outputs.deploy_env }}
      git_sha_short: ${{ needs.initialize.outputs.git_sha_short }}
      ecr_name: "<ecr_name>"
      aws_account: 'prod' # master, stag, prod
      aws_region: 'ap-southeast-1'
      builder_cache: false # true, false
      firebase_env: 'prod' # stag, prod
      source_path: '/server' # If dockerfile is in subfolder
      git_sha_short_ecr: ${{ needs.initialize.outputs.git_sha_short_ecr }}

  ecs-deploy:
    needs: [initialize, docker_build]
    uses: naluri-hidup/reusable-workflows/.github/workflows/.ecs-deploy-task-definition.yml@v2.0
    secrets: inherit
    with:
      deploy_env: ${{ needs.initialize.outputs.deploy_env }}
      git_sha_short: ${{ needs.initialize.outputs.git_sha_short }}
      ecr_name: '<ecr-name>'
      git_branch: ${{ needs.initialize.outputs.git_branch }}
      reusable_tag: 'v1.6'
      standalone_ecs_task: "${{ needs.initialize.outputs.standalone_task == 'true' }}"
      aws_account: 'prod' # master, stag, prod
      aws_region: 'ap-southeast-1'
      source_path: '/server' # If deployment/definition.yml is in subfolder
      git_sha_short_ecr: ${{ needs.initialize.outputs.git_sha_short_ecr }}